import{_ as a,c as t,o as e,a2 as i}from"./chunks/framework.DniMO-iw.js";const l="/assets/img.BIQ2Kxr4.png",r="/assets/img_1.DwZYGF5Y.png",b=JSON.parse('{"title":"树","description":"","frontmatter":{},"headers":[],"relativePath":"article/dataStructure/tree/index.md","filePath":"article/dataStructure/tree/index.md"}'),n={name:"article/dataStructure/tree/index.md"},o=i('<h1 id="树" tabindex="-1">树 <a class="header-anchor" href="#树" aria-label="Permalink to &quot;树&quot;">​</a></h1><p><img src="'+l+'" alt="img.png"></p><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>树是（n&gt;=0）个节点的有限集合。当n=0时，称为空树，在任意一颗非空树中应满足：</p><ul><li>有且仅有一个特定的根节点</li><li>当n &gt; 1时，其余节点可分为 m (m &gt; 0) 个互不相交的有限集T1,T2...Tm，其中每个集合本身又是一颗树，并且称为根的子树</li></ul><p>树作为一个逻辑结构，同时也是一种分层结构。具有以下两个特点</p><ul><li>树的根节点没有前驱，除根节点外的所有节点有且只有一个前驱</li><li>树中所有节点可以有零个或多个后继</li></ul><p>因此 n个节点的树有n-1条边</p><h2 id="基本术语" tabindex="-1">基本术语 <a class="header-anchor" href="#基本术语" aria-label="Permalink to &quot;基本术语&quot;">​</a></h2><p><img src="'+r+'" alt="img_1.png"></p><ul><li><p>考虑节点K。根节点A 到 节点K 的 唯一路径上的任意节点，称为节点K的祖先。<br> 如节点B是节点K的祖先，节点K是节点B的子孙。<br> 路径上最接近节点K的节点E称为K的双亲，而K为节点E的孩子。<br> 根A是树中唯一没有双亲的节点。有相同双亲的节点称为兄弟，如节点K和节点L有相同的双亲E，即K和L为兄弟。</p></li><li><p>树中一个节点的孩子个数称为该节点的度,树中节点的最大度数称为树的度。<br> 如节点B的度为2,节点D的度为3,树的度为3。</p></li><li><p>度大于0的节点称为分支节点(又称非终端节点);度为0(没有子女节点)的节点称为叶子节点(又称终端节点)。在分支节点中,每个节点的分支数就是该节点的度。</p></li><li><p>节点的深度、高度和层次。 节点的层次从树根开始定义，根节点为第1层，它的子节点为第2层，以此类推。双亲在同一层的节点互为堂兄弟,图中节点G与E、F、H、I、J互为堂兄弟。 节点的深度是从根节点开始自顶向下逐层累加的。 节点的高度是从叶节点开始自底向上逐层累加的。 树的高度(或深度)是树中节点的最大层数。图中树的高度为4。</p></li><li><p>有序树和无序树。树中节点的各子树从左到右是有次序的,不能互换,称该树为有序树,否则称为无序树。<br> 假设图为有序树,若将子节点位置互换,则变成一棵不同的树。 路径和路径长度。树中两个节点之间的路径是由这两个节点之间所经过的节点序列构成的,而路径长度是路径上所经过的边的个数。 注意:由于树中的分支是有向的,即从双亲指向孩子,所以树中的路径是从上向下的,同一双亲的两个孩子之间不存在路径。</p></li><li><p>森林。森林是m (m≥0)棵互不相交的树的集合。森林的概念与树的概念十分相近，因为只要把树的根节点删去就成了森林。反之，只要给m棵独立的树加上一个节点，并把这m棵树作为该节点的子树，则森林就变成了树。</p></li></ul><h2 id="树的性质" tabindex="-1">树的性质 <a class="header-anchor" href="#树的性质" aria-label="Permalink to &quot;树的性质&quot;">​</a></h2><ol><li>树中的节点数等于所以节点的度数+1</li><li>度为m的数中第i层上至多有m^i-1</li><li>高度为h hh的m mm叉树至多有( m h − 1 ) / ( m − 1 ) (m^h-1)/(m-1)(m^h −1)/(m−1)个结点。</li></ol>',13),s=[o];function m(p,c,_,d,h,u){return e(),t("div",null,s)}const f=a(n,[["render",m]]);export{b as __pageData,f as default};
