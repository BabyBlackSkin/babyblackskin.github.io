import{_ as s,c as t,o as i,a2 as a}from"./chunks/framework.DniMO-iw.js";const E=JSON.parse('{"title":"事务","description":"","frontmatter":{},"headers":[],"relativePath":"article/database/mysql/事务.md","filePath":"article/database/mysql/事务.md"}'),d={name:"article/database/mysql/事务.md"},n=a(`<h1 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h1><p>事务是数据库管理系统中的一个核心概念，确保了一系列数据库操作要么全部成功，要么全部失败，从而保证数据库的完整性和一致性</p><blockquote><p>MySQL从5.5版本开始将InnoDB引擎作为默认引擎。且只有InnoDB支持事务，其他如MyISAM和Memory都是不支持事物的</p></blockquote><h2 id="事务的四大特征acid" tabindex="-1">事务的四大特征<code>ACID</code> <a class="header-anchor" href="#事务的四大特征acid" aria-label="Permalink to &quot;事务的四大特征\`\`\`ACID\`\`\`&quot;">​</a></h2><p><strong>原子性（Atomicity）</strong><br> 事物是数据库的逻辑工作单位，事务内的操作要么全部都做，要么都不做</p><p><strong>一致性（Consistency）</strong><br> 事务执行的结果必须是使数据库从一个状态变更到另一个状态。因此数据库中只存在成功事务的结果时，就说明处于一致性状态。</p><p><strong>隔离性（Isolation）</strong><br> 一个事务的执行不能受到其他事务的干扰，事务的操作以及使用的数据对其他并发事务来说都是不可见的;</p><ul><li>隔离级别 <ul><li>未提交读（RU Read Uncommitted）：允许脏读。即一个事物可以看到其他事务未提交的修改。隔离级别最低，性能最高，一致性最差</li><li>已提交读（RC Read Committed）：允许一个事务看到其他事务已经提交的修改。可以防止脏读，但不能防止可重复读和幻读</li><li>可重复读（RR Repeatable Read）：确认在同一个事务内，执行两次相同的SELECT语句。查询出的结果都是相同的。可以防止脏读和不可重复读，但不能完全防止幻读（在MySQL的InnoDB引擎中，可以通过间隙锁进一步防止幻读）<strong>MySQL默认隔离级别</strong></li><li>串行化（Serializable）：将事务完全隔离，按顺序执行，隔离级别最高，一致性最好，性能最差</li></ul></li></ul><p><strong>持久性（Durability）</strong><br> 一个事务一旦提交，它对数据库中数据的改变就是永久性的。即使系统发生故障也不会丢失</p><h2 id="mysql的四种隔离级别" tabindex="-1">MySQL的四种隔离级别 <a class="header-anchor" href="#mysql的四种隔离级别" aria-label="Permalink to &quot;MySQL的四种隔离级别&quot;">​</a></h2><p>SQ标准定义了4类隔离级别，用来限定事务内外的哪些改变是可见的，那些事不可见的。低级别的隔离一般支持更高的并发，并拥有更低的系统开销</p><h3 id="未提交读-ru-read-uncommitted" tabindex="-1">未提交读（RU Read Uncommitted） <a class="header-anchor" href="#未提交读-ru-read-uncommitted" aria-label="Permalink to &quot;未提交读（RU Read Uncommitted）&quot;">​</a></h3><p>所有事务都能看到其他未提交事务的执行结果。（读取未提交事务的数据，称之为脏读<code>Dirty Read</code>）</p><h3 id="已提交读-rc-read-committed" tabindex="-1">已提交读（RC Read Committed） <a class="header-anchor" href="#已提交读-rc-read-committed" aria-label="Permalink to &quot;已提交读（RC Read Committed）&quot;">​</a></h3><p>大多数数据库系统的默认隔离级别。一个事务只能看见已经提交事务所做的修改。支持不可重复读<code>Norepeatable Read </code>同一事物在执行两次相同的SELECT语句时，可能有存在其他事务逇新的<code>commit</code>，所以尽管是同一个select但是可能返回不同的结果</p><h3 id="可重复读-rr-repeatable-read" tabindex="-1">可重复读（RR Repeatable Read） <a class="header-anchor" href="#可重复读-rr-repeatable-read" aria-label="Permalink to &quot;可重复读（RR Repeatable Read）&quot;">​</a></h3><p>MySQL的默认隔离级别。同一个事物在执行多次相同的SELECT 语句时，返回的内容都是一样的，但会存在幻读<code>Phantom Read</code>（指当用户读取某一范围的数据行时，另一个事物又在该范围内插入了新行，会返回新的&quot;幻影&quot;行）。 InnDB存储引擎采用多版本并发控制<code>MVCC（Multiversion Concurrency Control） </code>机制解决了这个问题</p><h3 id="串行化-serializable" tabindex="-1">串行化（Serializable） <a class="header-anchor" href="#串行化-serializable" aria-label="Permalink to &quot;串行化（Serializable）&quot;">​</a></h3><p>最高的隔离级别，强制事务进行排序，使事务不相互冲突，解决幻读的问题。即在每个读取的数据中加上共享锁。性能最低</p><h3 id="脏读、幻读、不可重复读" tabindex="-1">脏读、幻读、不可重复读 <a class="header-anchor" href="#脏读、幻读、不可重复读" aria-label="Permalink to &quot;脏读、幻读、不可重复读&quot;">​</a></h3><ul><li>脏读： 某个事务已经更新了一份数据，另一个事物读取到了同一份数据，但由于某些原因，前一个事物Rollback了，则后一个事物读取的数据就是错误的</li><li>不可重复读：一个事物，在执行两次相同的查询中，存在另一个事物对数据进行了修改操作</li><li>幻读： 一个事物，在执行两次相同的查询中，返回的行数不一致</li></ul><h2 id="隔离级别" tabindex="-1">隔离级别 <a class="header-anchor" href="#隔离级别" aria-label="Permalink to &quot;隔离级别&quot;">​</a></h2><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read Uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Read Committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>Repeatable Read</td><td>×</td><td>×</td><td>√</td></tr><tr><td>Serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><h2 id="测试mysql的隔离级别" tabindex="-1">测试MySQL的隔离级别 <a class="header-anchor" href="#测试mysql的隔离级别" aria-label="Permalink to &quot;测试MySQL的隔离级别&quot;">​</a></h2><p>新建一张bank_account的表，代表银行的账户信息，并初始化数据</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CREATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TABLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bank_account</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> varchar(255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">COLLATE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utf8_bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NULL,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> int(11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) DEFAULT NULL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.03 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">study</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bank_account</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) VALUES (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;张三&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.01 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INTO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">study</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bank_account</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) VALUES (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;李四&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span></span></code></pre></div><h3 id="read-uncommitted-未提交读" tabindex="-1">Read Uncommitted（未提交读） <a class="header-anchor" href="#read-uncommitted-未提交读" aria-label="Permalink to &quot;Read Uncommitted（未提交读）&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置当前session的隔离级别</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transaction</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> level</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uncommitted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查询当前的隔离级别</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 8.0 以后 : SELECT @@transaction_isolation</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 8.0版本之前: SELECT @@tx_isolation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> select</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @@tx_isolation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @@tx_isolation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> READ-UNCOMMITTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+------------------+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.02 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><table><thead><tr><td>时刻</td><td>事务A</td><td>事务B</td></tr></thead><tbody><tr><td>时刻1</td><td> 启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td><td>启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td></tr><tr><td>时刻2</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr><tr><td>时刻3</td><td></td><td>更新张三的amount<code>UPDATE bank_account SET amount = 500 WHERE name =&#39;张三&#39;;</code></td></tr><tr><td>时刻4</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>500</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr><tr><td>时刻5</td><td></td><td>回滚事务<code>ROLL BACK</code></td></tr><tr><td>时刻6</td><td> 再次查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr></tbody></table><p>可见，当事务B更新了一条记录后，对于事务A是可见的，造成了脏读。未提交读是最低级的隔离级别</p><h3 id="read-committed-已提交读" tabindex="-1">Read Committed（已提交读） <a class="header-anchor" href="#read-committed-已提交读" aria-label="Permalink to &quot;Read Committed（已提交读）&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置当前session的隔离级别</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transaction</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> level</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> committed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OK,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> affected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.00 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> select</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @@tx_isolation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+----------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @@tx_isolation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+----------------+</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> READ-COMMITTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">+----------------+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (0.01 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><table><thead><tr><td>时刻</td><td>事务A</td><td>事务B</td><td>事务C</td></tr></thead><tbody><tr><td>时刻1</td><td> 启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td><td>启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td><td>启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td></tr><tr><td>时刻2</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td><td></td></tr><tr><td>时刻3</td><td></td><td>更新张三的amount<code>UPDATE bank_account SET amount = 500 WHERE name =&#39;张三&#39;;</code></td><td>更新李四的amount<code>UPDATE bank_account SET amount = 500 WHERE name =&#39;李四&#39;;</code></td></tr><tr><td>时刻4</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td><td></td></tr><tr><td>时刻5</td><td></td><td>提交事务<code>COMMIT</code></td><td>回滚事务<code>ROLL BACK</code></td></tr><tr><td>时刻6</td><td> 再次查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>500</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td><td></td></tr></tbody></table><p>在时刻2和时刻4的中间，事务B修改了数据，但没有提交，在RC隔离级别下，对于事务A是无法读取其他事务未提交的修改 但在时刻4和时刻6的中间，事务B将修改的数据<code>commit</code>了，在RR隔离级别下，事务A是可以读取到其他事务提交的修改的</p><p>可见，在已提交读的隔离级别下，解决了脏读的问题，但出现了不可重复读的问题，即事务A在多次查询中数据不一样的情况。</p><h3 id="repeatable-read-可重复读" tabindex="-1">Repeatable Read（可重复读） <a class="header-anchor" href="#repeatable-read-可重复读" aria-label="Permalink to &quot;Repeatable Read（可重复读）&quot;">​</a></h3><table><thead><tr><td>时刻</td><td>事务A</td><td>事务B</td></tr></thead><tbody><tr><td>时刻1</td><td> 启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td><td>启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td></tr><tr><td>时刻2</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr><tr><td>时刻3</td><td></td><td>更新张三的amount<code>UPDATE bank_account SET amount = 500 WHERE name =&#39;张三&#39;;</code></td></tr><tr><td>时刻4</td><td> 查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr><tr><td>时刻5</td><td></td><td>提交事务<code>COMMIT</code></td></tr><tr><td>时刻6</td><td> 再次查询数据 <code>SELECT * FROM bank_account;</code><table><thead><tr><td>name</td><td>amount</td></tr></thead><tbody><tr><td>张三</td><td>300</td></tr><tr><td>李四</td><td>300</td></tr></tbody></table></td><td></td></tr></tbody></table><p>在可重复读的隔离级别下，不管外部事务如何修改数据，当前事务执行多次SELECT时，只会查询到开启事务时的快照信息，其他事务的修改对于当前事务都是不可见的（基于<code>MVCC</code>）</p><h3 id="serializable-串行化" tabindex="-1">Serializable（串行化） <a class="header-anchor" href="#serializable-串行化" aria-label="Permalink to &quot;Serializable（串行化）&quot;">​</a></h3><table><thead><tr><td>时刻</td><td>事务A</td><td>事务B</td></tr></thead><tbody><tr><td>时刻1</td><td> 启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td><td>启动事务，此时数据为初始状态 <code>START TRANSACTION;</code></td></tr><tr><td>时刻2</td><td>更新张三的amount<code>UPDATE bank_account SET amount = 500 WHERE name =&#39;张三&#39;;</code></td><td></td></tr><tr><td>时刻3</td><td></td><td>更新张三的amount<code>UPDATE bank_account SET amount = 600 WHERE name =&#39;张三&#39;;</code>此时进入等待状态。原因：事务A尚未提交（可能发生等待超时）</td></tr><tr><td>时刻4</td><td>提交事务<code>COMMIT</code></td><td>等待</td></tr><tr><td>时刻5</td><td></td><td>插入成功</td></tr></tbody></table>`,40),e=[n];function h(l,k,p,r,F,o){return i(),t("div",null,e)}const y=s(d,[["render",h]]);export{E as __pageData,y as default};
