import{_ as e,c as o,o as a,a2 as d}from"./chunks/framework.DniMO-iw.js";const c="/assets/1.DoRmBXe9.png",r="/assets/2.BhD9brTg.png",b=JSON.parse('{"title":"Java对象头-MarkWord","description":"","frontmatter":{},"headers":[],"relativePath":"article/java/MarkWord.md","filePath":"article/java/MarkWord.md"}'),t={name:"article/java/MarkWord.md"},i=d('<h1 id="java对象头-markword" tabindex="-1">Java对象头-MarkWord <a class="header-anchor" href="#java对象头-markword" aria-label="Permalink to &quot;Java对象头-MarkWord&quot;">​</a></h1><p><code>mark_word</code>: <code>object</code>的<code>header</code>中存储的<code>mark_word</code>，<code>mark_word</code>中存储了<code>object</code>的锁状态、<code>hash_code</code>、<code>biased_lock</code>、<code>age</code>等信息。</p><p>对象头信息是是与对象自身信息无关的额外存储成本，考虑到虚拟机的空间效率，虚拟机被设计成了一个非固定长度的数据结构以便在极小的空间内尽量存储更多的信息，它会根据对象的状态复用自己的存储空间。</p><h2 id="结构" tabindex="-1">结构 <a class="header-anchor" href="#结构" aria-label="Permalink to &quot;结构&quot;">​</a></h2><p><strong>32位</strong></p><p><img src="'+c+'" alt="img.png"></p><p><strong>64位</strong></p><p><img src="'+r+'" alt="img.png"></p><p><code>lock</code>表示是否加锁，<code>biased_lock</code>表示是否是偏向锁。<code>lock</code>和<code>biased_lock</code>两个标记位组合在一起，共同表示<code>object</code>的锁状态。</p><h2 id="名词解释" tabindex="-1">名词解释 <a class="header-anchor" href="#名词解释" aria-label="Permalink to &quot;名词解释&quot;">​</a></h2><ol><li><code>lock</code>：锁状态标记位，占两个二进制位，由于希望用尽可能少的二进制位表示尽可能多的信息，因此设置了lock标记</li><li><code>biased_lock</code>：对象是否启用偏向锁标记，只占1个二进制位。为1时表示对象启用偏向锁，为0时表示对象没有偏向锁</li><li><code>age</code>：4位的Java对象分代年龄。在GC中，对象在<code>Survivor</code>区复制一次，年龄就增加1。当对象达到设定的阈值时，将会晋升到老年代。默认情况下，并行GC的年龄阈值为15，并发<code>GC</code>的年龄阈值为6。由于<code>age</code>只有4位，因此最大值为15，这就是<code>-XX:MaxTenuringThreshold</code>选项最大值为15的原因</li><li><code>identity_hashcode</code>：31位的对象标识<code>HashCode</code>（哈希码）采用延迟加载技术，当调用<code>Object.hashCode()</code>方法或者<code>System.identityHashCode()</code>方法计算对象的<code>HashCode</code>后，其结果将被写到该对象头中。当对象被锁定时，该值会移动到<code>Monitor</code>（监视器）中。</li><li><code>thread</code>：54位的线程ID，值为持有偏向锁的线程ID。</li></ol>',11),s=[i];function l(n,_,h,p,k,m){return a(),o("div",null,s)}const u=e(t,[["render",l]]);export{b as __pageData,u as default};
